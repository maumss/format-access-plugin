/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.yahoo.mau_mss.formataccessplugin.ui;

import br.com.yahoo.mau_mss.formataccessplugin.domain.FormatAccessPreferences;

/**
 * Cria um sub-painel Options -> Editor -> Member Acesses
 *
 * @author Mau
 */
class MemberAccessesPanel extends javax.swing.JPanel {
  private final MemberAccessesOptionsPanelController controller;
  private static final long serialVersionUID = 1L;

  MemberAccessesPanel(MemberAccessesOptionsPanelController controller) {
    this.controller = controller;
    initComponents();
    // TODO listen to changes in form fields and call controller.changed()
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jCheckBoxEnableOnSave = new javax.swing.JCheckBox();
    jPanelNonStatics = new javax.swing.JPanel();
    jCheckBoxAddThisForNSFields = new javax.swing.JCheckBox();
    jCheckBoxRemoveThisForNSMethods = new javax.swing.JCheckBox();
    jPanelStatics = new javax.swing.JPanel();
    jCheckBoxAddQualifierForSFields = new javax.swing.JCheckBox();
    jCheckBoxAddQualifierForSMethods = new javax.swing.JCheckBox();

    org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxEnableOnSave, org.openide.util.NbBundle.getMessage(MemberAccessesPanel.class, "MemberAccessesPanel.jCheckBoxEnableOnSave.text")); // NOI18N

    jPanelNonStatics.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(MemberAccessesPanel.class, "MemberAccessesPanel.jPanelNonStatics.border.title"))); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxAddThisForNSFields, org.openide.util.NbBundle.getMessage(MemberAccessesPanel.class, "MemberAccessesPanel.jCheckBoxAddThisForNSFields.text")); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxRemoveThisForNSMethods, org.openide.util.NbBundle.getMessage(MemberAccessesPanel.class, "MemberAccessesPanel.jCheckBoxRemoveThisForNSMethods.text")); // NOI18N

    javax.swing.GroupLayout jPanelNonStaticsLayout = new javax.swing.GroupLayout(jPanelNonStatics);
    jPanelNonStatics.setLayout(jPanelNonStaticsLayout);
    jPanelNonStaticsLayout.setHorizontalGroup(
      jPanelNonStaticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelNonStaticsLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanelNonStaticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jCheckBoxAddThisForNSFields)
          .addComponent(jCheckBoxRemoveThisForNSMethods))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanelNonStaticsLayout.setVerticalGroup(
      jPanelNonStaticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelNonStaticsLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jCheckBoxAddThisForNSFields)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jCheckBoxRemoveThisForNSMethods)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanelStatics.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(MemberAccessesPanel.class, "MemberAccessesPanel.jPanelStatics.border.title"))); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxAddQualifierForSFields, org.openide.util.NbBundle.getMessage(MemberAccessesPanel.class, "MemberAccessesPanel.jCheckBoxAddQualifierForSFields.text")); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxAddQualifierForSMethods, org.openide.util.NbBundle.getMessage(MemberAccessesPanel.class, "MemberAccessesPanel.jCheckBoxAddQualifierForSMethods.text")); // NOI18N

    javax.swing.GroupLayout jPanelStaticsLayout = new javax.swing.GroupLayout(jPanelStatics);
    jPanelStatics.setLayout(jPanelStaticsLayout);
    jPanelStaticsLayout.setHorizontalGroup(
      jPanelStaticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelStaticsLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanelStaticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jCheckBoxAddQualifierForSFields)
          .addComponent(jCheckBoxAddQualifierForSMethods))
        .addContainerGap(23, Short.MAX_VALUE))
    );
    jPanelStaticsLayout.setVerticalGroup(
      jPanelStaticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelStaticsLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jCheckBoxAddQualifierForSFields)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jCheckBoxAddQualifierForSMethods)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addComponent(jPanelStatics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jCheckBoxEnableOnSave, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanelNonStatics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jCheckBoxEnableOnSave)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanelNonStatics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanelStatics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  void load() {
    FormatAccessPreferences formatAccessPreferences = FormatAccessPreferences.load();
    this.jCheckBoxEnableOnSave.setSelected(formatAccessPreferences.isEnableOnSave());
    this.jCheckBoxAddThisForNSFields.setSelected(formatAccessPreferences.isAddThisForNSFields());
    this.jCheckBoxRemoveThisForNSMethods.setSelected(formatAccessPreferences.isRemoveThisForNSMethods());
    this.jCheckBoxAddQualifierForSFields.setSelected(formatAccessPreferences.isAddQualifierForSFields());
    this.jCheckBoxAddQualifierForSMethods.setSelected(formatAccessPreferences.isAddQualifierForSMethods());
  }

  void store() {
    FormatAccessPreferences formatAccessPreferences = new FormatAccessPreferences(
        this.jCheckBoxEnableOnSave.isSelected(),
        this.jCheckBoxAddThisForNSFields.isSelected(), this.jCheckBoxRemoveThisForNSMethods.isSelected(),
        this.jCheckBoxAddQualifierForSFields.isSelected(), this.jCheckBoxAddQualifierForSMethods.isSelected());
    FormatAccessPreferences.store(formatAccessPreferences);
  }

  boolean valid() {
    return true;
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox jCheckBoxAddQualifierForSFields;
  private javax.swing.JCheckBox jCheckBoxAddQualifierForSMethods;
  private javax.swing.JCheckBox jCheckBoxAddThisForNSFields;
  private javax.swing.JCheckBox jCheckBoxEnableOnSave;
  private javax.swing.JCheckBox jCheckBoxRemoveThisForNSMethods;
  private javax.swing.JPanel jPanelNonStatics;
  private javax.swing.JPanel jPanelStatics;
  // End of variables declaration//GEN-END:variables
}
